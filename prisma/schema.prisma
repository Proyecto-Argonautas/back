// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../server/generated/prisma"
  // previewFeatures = ["queryCompiler", "driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

// * User Section

model User {
  id            String    @id @unique
  name          String
  lastName      String?
  email         String    @unique
  emailVerified Boolean   @map("email_verfied")
  image         String?
  sessions      Session[]
  accounts      Account[]
  travels       Travel[]
  resume        Resume[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model Session {
  id        String  @id
  token     String
  ipAddress String? @map("ip_address")
  userAgent String? @map("user_agent")
  userId    String  @map("user_id")
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expiresAt DateTime @map("expires_at")

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  idToken               String?   @map("id_token")
  accessToken           String?   @map("acces_token")
  refreshToken          String?   @map("refresh_token")
  accessTokenExpiresAt  DateTime? @map("acces_token_expires_at")
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at")
  scope                 String?
  password              String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("account")
}

model Verification {
  id         String @id
  identifier String
  value      String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  expiresAt DateTime @map("expires_at")

  @@map("verification")
}

// * Travel section
model Travel {
  id         Int          @id @default(autoincrement())
  userId     String       @map("user_id")
  user       User         @relation(fields: [userId], references: [id])
  destiny    String
  startDate  DateTime     @map("start_date")
  endDate    DateTime     @map("end_date")
  companions Companions[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("travel")
}

model Companions {
  id       Int    @id @default(autoincrement())
  travel   Travel @relation(fields: [travelId], references: [id])
  travelId Int
  name     String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("companions")
}

model Resume {
  id        Int     @id @default(autoincrement())
  component String?
  user      User[]
  userId    Int     @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("resume")
}

// model Airport {
//   airport_id Int    @id @default(autoincrement())
//   name       String
// }

// model Flight {
//   flight_id            Int      @id @default(autoincrement())
//   resume_id            Int
//   id_departure_airport String
//   id_arrival_airport   String
//   flight_direction     String
//   date_departure       DateTime
//   date_arrival         DateTime
//   airline_data         String
//   flight_number        String
//   book_number          BigInt
//   price                BigInt
//   currency             String
// }

// model Accomodation {
//   accomodation_id Int      @id @default(autoincrement())
//   name            String
//   address         String
//   check_in_date   DateTime
//   check_out_date  DateTime
//   book_number     Int
//   price           Int
//   currency        Int
// }

// model Note {
//   note_id Int    @id @default(autoincrement())
//   text    String
// }
